apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: apache
    version: "1.0"
  name: apache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apache
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: apache
    spec:
      containers:
      - name: apache
        image: docker.io/mika2147/microservice-kubernetes-apache:latest        
        imagePullPolicy: Always        
        ports:
        - containerPort: 80
        resources: {}
status: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: cpdatabase
    version: "1.0"
  name: cpdatabase
  annotations:
    sidecar.istio.io/inject: "false"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cpdatabase
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: cpdatabase
    spec:
      containers:
      - image: docker.io/mika2147/microservice-kubernetes-database:latest
        name: cpdatabase
        imagePullPolicy: Always        
        env:
          # Use secret in real usage
        - name: MYSQL_ROOT_PASSWORD
          value: c8de110f37300a53a971749
        ports:
        - containerPort: 3306
          name: cpdatabase
        args:
          - "--ssl=0"
        volumeMounts:
        - name: cpdatabase-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: cpdatabase-persistent-storage
        persistentVolumeClaim:
          claimName: cpdatabase-pv-claim
status: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: apache
  name: apache
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
    name: http
  selector:
    app: apache
  type: NodePort
status:
  loadBalancer: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: cpdatabase
  name: cpdatabase
spec:
  ports:
  - port: 3306
    protocol: TCP
    targetPort: 3306
  selector:
    app: cpdatabase
  type: NodePort
status:
  loadBalancer: {}

---

apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: microservice-gateway
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"

---

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: apache
spec:
  hosts:
  - "*"
  gateways:
  - microservice-gateway
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        port:
          number: 80
        host: apache.default.svc.cluster.local

apiVersion: v1
kind: PersistentVolume
metadata:
  name: cpdatabase-pv-volume
  finalizers: null
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/data/cpdatabase-pv-volume/mnt/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cpdatabase-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
