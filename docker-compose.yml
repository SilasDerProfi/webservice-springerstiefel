version: '3.2'
services:
  legacywebshop:
    build:
      context: ./
      dockerfile: ./docker/LegacyDockerfile
    ports:
      - "8888:8080"
    networks:
      local_dev_net:
          aliases:
              - legacywebshop

  legacy-web-shop-db-image:
    build:
      context: ./
      dockerfile: ./docker/LegacyDockerfileMySQL
    volumes:
      - "./.data/db:/var/lib/mysql"
    environment:
      MYSQL_ROOT_PASSWORD: c8de110f37300a53a971749
      MYSQL_DATABASE: webshop
      MYSQL_USER: webshopuser
      MYSQL_PASSWORD: 240b2c6d58ff2ce2f508b49f
    ports:
      - "3306:3306"
    networks:
        local_dev_net:
            aliases:
                - web-shop-db-image

  categoryservice:
    build:
      context: ./
      dockerfile: ./docker/CategoryDockerfile
    ports:
      - "8888:8081"
    networks:
      local_dev_net:
          aliases:
              - categoryservice

  category-service-db-image:
    build:
      context: ./
      dockerfile: ./docker/CategoryDockerfileMySQL
    volumes:
      - "./.data/db:/var/lib/mysql"
      # andere data?
    environment:
      MYSQL_ROOT_PASSWORD: c8de110f37300a53a971749
      MYSQL_DATABASE: category
      MYSQL_USER: webshopuser
      MYSQL_PASSWORD: 240b2c6d58ff2ce2f508b49f
    ports:
      - "3306:3307"
    networks:
        local_dev_net:
            aliases:
                - category-service-db-image

  productservice:
    build:
      context: ./
      dockerfile: ./docker/ProductDockerfile
    ports:
      - "8888:8082"
    networks:
      local_dev_net:
          aliases:
              - productservice

  legacy-web-shop-db-image:
    build:
      context: ./
      dockerfile: ./docker/ProductDockerfileMySQL
    volumes:
      - "./.data/db:/var/lib/mysql"
      #andere data?
    environment:
      MYSQL_ROOT_PASSWORD: c8de110f37300a53a971749
      MYSQL_DATABASE: product
      MYSQL_USER: webshopuser
      MYSQL_PASSWORD: 240b2c6d58ff2ce2f508b49f
    ports:
      - "3306:3308"
    networks:
        local_dev_net:
            aliases:
                - product-service-db-image

networks:
  local_dev_net:
    driver: bridge
